name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  prevent-push-to-main-if-not-dev:
    name: Reject PRs to main not from dev
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main' && github.head_ref != 'dev'

    steps:
      - name: Fail PR from non-dev
        run: |
          echo "‚ùå Pull requests to main must come from 'dev' only."
          exit 1

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: flake8 ./src

  build-package:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-package

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t drone-rescue .

  docker-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: build-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/drone-rescue:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
